name: CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  tests:
    name: "Golang ${{ matrix.go-version }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        mysql-version: ['mysql:latest', 'mysql:5.7', 'mysql:5.6']
        go-version: ['1.13', '1.14', '1.15']
        os: [ubuntu-latest, macos-latest]

    services:
      mysql:
        image: ${{ matrix.mysql-version }}
        env:
          MYSQL_DATABASE: gobay
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
          - 3306:3306
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672:5672
      redis-server:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Check out code into Go module directory 
        uses: actions/checkout@v2

      - name: Set up golang ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Go mod package cache
        uses: actions/cache@v2
        with:
          path: $GOPATH/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('go.mod') }}
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false --local
          poetry install -E full

      - name: Before tests
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint
          mysql -e 'CREATE DATABASE gobay DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;'

      - name: Run tests and lint
        run: |
          golangci-lint run --timeout=10m --skip-dirs=testdata --tests=false
          go test -v -count=1 ./...
